# load Beers.csv, setting data types
classProfile <- c("character", "integer", "numeric", "integer", "integer", "factor", "numeric")
beers <- read.csv("Beers.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in beers
names(beers)[names(beers) == "Name"] <- "Beer_Name"
# load Breweries.csv, setting data types
classProfile <- c("integer","character", "character", "factor")
breweries <- read.csv("Breweries.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in breweries
names(breweries)[names(breweries) == "Name"] <- "Brewery_Name"
master <- merge(beers, breweries, by.x="Brewery_id", by.y="Brew_ID", all=TRUE)
# reorder columns
master <- master[c("Beer_ID", "Beer_Name", "ABV", "IBU", "Style", "Ounces", "Brewery_id", "Brewery_Name", "City", "State" )]
# normalize column names
names(master)[names(master) == "Brewery_id"] <- "Brewery_ID"
# sort rows by beer ID
master <- master[order(master$Beer_ID),]
# head and tail of master
head(master, 6)
tail(master, 6)
# load Beers.csv, setting data types
classProfile <- c("character", "integer", "numeric", "integer", "integer", "factor", "numeric")
beers <- read.csv("Beers.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in beers
names(beers)[names(beers) == "Name"] <- "Beer_Name"
# load Breweries.csv, setting data types
classProfile <- c("integer","character", "character", "factor")
breweries <- read.csv("Breweries.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in breweries
names(breweries)[names(breweries) == "Name"] <- "Brewery_Name"
master <- merge(beers, breweries, by.x="Brewery_id", by.y="Brew_ID", all=TRUE)
# reorder columns
master <- master[c("Beer_ID", "Beer_Name", "ABV", "IBU", "Style", "Ounces", "Brewery_id", "Brewery_Name", "City", "State" )]
# normalize column names
names(master)[names(master) == "Brewery_id"] <- "Brewery_ID"
# sort rows by beer ID
master <- master[order(master$Beer_ID),]
# head and tail of master
head(master, 6)
tail(master, 6)
table(master$State, useNA = "no")
# The two tables were already merged in the data cleaning process (see first section above).
head(master, 6)
tail(master, 6)
sapply(master, function(x) sum(is.na(x)))
ibu.med <- aggregate(master$IBU, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(ibu.med) <- c("State","IBU")
abv.med <- aggregate(master$ABV, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(abv.med) <- c("State","ABV")
barplot(ibu.med$IBU, names.arg = ibu.med$State, beside = TRUE, main = "Median IBU by State", xlab = "State", ylab = "Median IBU", col = "Blue")
barplot(abv.med$ABV, names.arg = abv.med$ABV, beside = TRUE, main = "Median ABV by State", xlab = "State", ylab = "Median ABV", col = "Blue")
master[which.max(master$ABV),][,10]
master[which.max(master$IBU),][,10]
summary(master$ABV)
plot(master$ABV ~ master$IBU, main = "ABV to IBU", ylab = "ABV", xlab = "IBU")
table(master$State,count(unquie(master$Brewery_ID))
)
table(master$State,count.fields(unique(master$Brewery_ID)))
table(master$State,(unique(master$Brewery_ID)))
table(master$State,master$Brewery_ID)
table(unique(master$State, master$Brewery_ID))
table(unique(master$Brewery_ID),master$State)
table(unique(master$Brewery_ID,master$State))
unique.data.frame(master$State)
unique.data.frame(master$State,master$Brewery_ID)
library(data.table)
unique(master$Brewery_ID)
unique(master$Brewery_ID, by=master$State)
table(master$state, unique(master$Brewery_ID))
data.frame(master$state, unique(master$Brewery_ID))
dfrows <- c(master$State)
dfcol <- unique(master$Brewery_ID)
data.frame(master,row.names=dfrows)
sapply(master, function(x) sum(is.na(x)))
ibu.med <- aggregate(master$IBU, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(ibu.med) <- c("State","IBU")
abv.med <- aggregate(master$ABV, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(abv.med) <- c("State","ABV")
barplot(ibu.med$IBU, names.arg = ibu.med$State, beside = TRUE, main = "Median IBU by State", xlab = "State", ylab = "Median IBU", col = "Blue")
barplot(abv.med$ABV, names.arg = abv.med$ABV, beside = TRUE, main = "Median ABV by State", xlab = "State", ylab = "Median ABV", col = "Blue")
master[which.max(master$ABV),][,10]
master[which.max(master$IBU),][,10]
summary(master$ABV)
plot(master$ABV ~ master$IBU, main = "ABV to IBU", ylab = "ABV", xlab = "IBU")
write.table(master, file="brewerycount.csv", by.x="Brewery_id", by.y="Brew_ID")
write.table(master, file="./brewerycount.csv", by.x="Brewery_id", by.y="Brew_ID")
write.table(master, file="./brewerycount.csv", x="Brewery_id", y="Brew_ID")
write.table(master, file="./brewerycount.csv")
write.table(master, file="./brewerycount.csv", x=dfrows, y=dfcol)
write.table(master, file="./brewerycount.csv", x=master$State, y=master$Brewery_ID)
write.table(master, file="./brewerycount.csv")
write.table(master, file="./brewerycount.csv", sep",")
write.table(master, file="./brewerycount.csv", sep=",")
unique(master[c("State", "Brewery_ID")])
unique(master[c("State")])
unique(master[c("State",rowsum(master$Brewery_ID))])
rowsum(master$Brewery_ID, group = master$State,na.rm = TRUE)
row(master$Brewery_ID, group = master$State,na.rm = TRUE)
library(data.table)
library(data.table)
master[, length(master[relpos == 0 & maxpos > 1]), by=master$State]
master[, length(master[relpos == 0 & maxpos > 1]), by=State]
nrow(master$Brewery_ID, by=master$State)
data.frame(master$State, nrow(master$Brewery_ID))
data.frame(master$State, unique(nrow(master$Brewery_ID)))
data.frame(master$State, nrow(master$Brewery_ID))
table(master$State, nrow(master$Brewery_Name))
table(unique(master$State), nrow(master$Brewery_Name))
table(unique(master$State), length(nrow(master$Brewery_Name)))
data.table(master$State, length(nrow(master$Brewery_Name)))
data.table(master$State, nrow(master$Brewery_Name)))
data.table(master$State, nrow(master$Brewery_Name))
data.table(master$State, master$Brewery_Name)
data.table(master$State, nrow=master$Brewery_Name)
data.table(master$State, nrow(master$Brewery_Name))
data.table(master$State, nrow(master$Brewery_Name),)
data.table(master$State, nrow(master$Brewery_Name))
data.table(master$State, nrow(master$Brewery_Name),1)
data.table(master$State, unique((master$Brewery_Name)))
data.table(master$State, unique((master$Brewery_Name))
)
data.frame(master$State, unique((master$Brewery_Name))
)
data.frame(master$State, nrow(master$Brewery_Name))
data.frame(master$State, nrow(unique(master$Brewery_Name)))
NROW(master)
# load Beers.csv, setting data types
classProfile <- c("character", "integer", "numeric", "integer", "integer", "factor", "numeric")
beers <- read.csv("Beers.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in beers
names(beers)[names(beers) == "Name"] <- "Beer_Name"
# load Breweries.csv, setting data types
classProfile <- c("integer","character", "character", "factor")
breweries <- read.csv("Breweries.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in breweries
names(breweries)[names(breweries) == "Name"] <- "Brewery_Name"
master <- merge(beers, breweries, by.x="Brewery_id", by.y="Brew_ID", all=TRUE)
# reorder columns
master <- master[c("Beer_ID", "Beer_Name", "ABV", "IBU", "Style", "Ounces", "Brewery_id", "Brewery_Name", "City", "State" )]
# normalize column names
names(master)[names(master) == "Brewery_id"] <- "Brewery_ID"
# sort rows by beer ID
master <- master[order(master$Beer_ID),]
# head and tail of master
head(master, 6)
tail(master, 6)
NROW(breweries$Brewery_Name)
NROW(master$State,unique(master$Brewery_Name))
unique(master$State,NROW(master$Brewery_Name))
NROW(unique(master$State,NROW(master$Brewery_Name)))
unique(master$State,NROW(unique(master$Brewery_Name)))
table(unique(master$State,NROW(unique(master$Brewery_Name))))
table((master$State,NROW(unique(master$Brewery_Name))))
table((master$State,NROW(unique(master$Brewery_Name))))
table((master$State, NROW(unique(master$Brewery_Name))))
matrix((master$State, NROW(unique(master$Brewery_Name))))
dfcount <- data.frame((master$State, NROW(unique(master$Brewery_Name))))
dfcount <- table((master$State, NROW(unique(master$Brewery_Name))))
dfcount <- table((master$State, NROW((master$Brewery_Name))))
dfcount <- table(master$State, NROW((master$Brewery_Name)))
dfcount <- table(unique(master$State), NROW((master$Brewery_Name)))
dfcount <- table(NROW(master$Brewery_Name), grouping(master$State))
dfcount <- table(nrow(master$Brewery_Name), grouping(master$State))
dfcount <- data.frame(nrow(master$Brewery_Name), grouping(master$State))
dfcount <- data.frame(master, row.names(master$State), nrow(master$Brewery_Name), grouping(master$State))
dfcount <- data.frame(nrow(master$Brewery_Name)
)
dfcount
dfcount <- data.frame(master,  nrow(master$Brewery_Name)
)
library(swirl)
swirl()
head()
head(flag_colors)
lapply(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
quit
bye
exit
q
bye
?
?
e
exists()
x
bye
Z
q
quit()
sapply(master, nrow)
sapply(master$State, 1 )
sapply(master$State, sum)
sapply(master$State, nrow)
quit
info()
bye()
sapply(master$State, sum)
sapply(master$State, count(master$Brewery_ID))
sapply(master$State, count.fields(master$Brewery_ID))
sapply(master$State, count.fields(master$Brewery_Name))
sapply(master, sum)
sapply(master, NROW(master$Brewery_Name))
sapply(master, %n% (master$Brewery_Name))
sapply(master$State, length(dim(aster$Brewery_Name)))
sapply(master$State, length(dim(master$Brewery_Name)))
sapply(master$State, dim(master$Brewery_Name))
sapply(master, dim(master$Brewery_Name))
sapply(master, length(master$Brewery_Name))
sapply(master, length(Brewery_Name))
sapply(master, unique(Brewery_Name))
NROW(na.omit(master))
sapply(master, sum)
sapply(master$Brewery_Name, sum)
sapply(master$Brewery_ID, sum)
sapply(master$Brewery_ID, sum, row.names(master$State))
sapply(master$Brewery_ID, sum, by=master$State))
sapply(master$Brewery_ID, sum, master$State))
sapply(master$Brewery_ID, sum, group(master$State)))
sapply(master$Brewery_ID, sum, groupby(master$State)))
aggregate(master, by=list(master$State), FUN=count)
data.table(aggregate(master, by=list(master$State), FUN=count))
function(master)count.fields()
library(data.table)
install.packages("data.table")
libray(data.table)
library(data.table)
master[, length(master$Brewery_Name[relpos == 0 & maxpos > 1], by = master$State]
master[, length(Brewery_Name[relpos == 0 & maxpos > 1], by = State]
master[, length(Brewery_Name[relpos == 1 & maxpos > 0], by = State]
master[, length(Brewery_ID[relpos == 1 & maxpos > 0], by = State]
dfcount <- c(master$State, master$Brewery_Name)
dfcountunique <- unique(dfcount)
length(dfcountunique)
library(dplyr)
nrow(distinct(master$Brewery_Name))
distinct(master$Brewery_Name)
distinct(Brewery_Name)
table(dfcountunique)
table(dfcount)
f2 <- sapply(master, function(master$State, master$Brewery_Name))
f2 <- sapply(master, function(State, Brewery_Name))
table(master, c("State", "Brewery_ID"))
library(plyr)
library(plyr    )
library(plyr)
library(dplyr)
df %>%
group_by(master$State, as.numeric) %>%
mutate(count = n())
group_by(master$State, as.numeric) %>%
reshape()
library(tidyr)
names(master)
master[!duplicated((master[, 8]),])]
master[!duplicated(master[, 8]),])]
master[!duplicated(master[, 8]),]
master[!duplicated(master[8,10]),]
sapply(master, function=count(master))
count(master, row.names(master$State))
count(master$Brewery_Name, master$State)
count(master$Brewery_Name, row.names(master$State))
count(master$Brewery_Name, colnames(master$State))
count(master$State, master$State)
count(master$State, master$Brewery_Name)
count(master$State, colnames(master$Brewery_Name))
distinct(master$State, colnames(master$Brewery_Name))
count(master$State, distinct(master$Brewery_Name))
count(master$State, row(master$Brewery_Name, as.factor()))
count(master$State, row(master$Brewery_Name, as.factor)
)
count(master$State, row(master$Brewery_Name, as.factor)
)
count(master$State, `row.names<-.default(master$Brewery_Name)
)
)
)
q
quit
a
count(master$State, master$Brewery_Name)
count(master$Brewery_Name, group_by(master$Brewery_Name))
table(master$State, master$Brewery_Name)
aggregate(master$Brewery_Name~master$State, data=master, FUN = table)
intm <- aggregate(master$Brewery_Name~master$State, data=master, FUN = table)
intm
data.frame(master$State=intm$`master$State`, intm$`master$Brewery_Name`)
data.frame(master$State=intm$`master$State`, intm$master$Brewery_Name)
data.frame(master$State=intm$master$State, intm$master$Brewery_Name)
# load Beers.csv, setting data types
classProfile <- c("character", "integer", "numeric", "integer", "integer", "factor", "numeric")
beers <- read.csv("Beers.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in beers
names(beers)[names(beers) == "Name"] <- "Beer_Name"
# load Breweries.csv, setting data types
classProfile <- c("integer","character", "character", "factor")
breweries <- read.csv("Breweries.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in breweries
names(breweries)[names(breweries) == "Name"] <- "Brewery_Name"
master <- merge(beers, breweries, by.x="Brewery_id", by.y="Brew_ID", all=TRUE)
# reorder columns
master <- master[c("Beer_ID", "Beer_Name", "ABV", "IBU", "Style", "Ounces", "Brewery_id", "Brewery_Name", "City", "State" )]
# normalize column names
names(master)[names(master) == "Brewery_id"] <- "Brewery_ID"
# sort rows by beer ID
master <- master[order(master$Beer_ID),]
# head and tail of master
head(master, 6)
tail(master, 6)
table(master$State, useNA = "no")
# The two tables were already merged in the data cleaning process (see first section above).
head(master, 6)
tail(master, 6)
sapply(master, function(x) sum(is.na(x)))
ibu.med <- aggregate(master$IBU, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(ibu.med) <- c("State","IBU")
abv.med <- aggregate(master$ABV, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(abv.med) <- c("State","ABV")
barplot(ibu.med$IBU, names.arg = ibu.med$State, beside = TRUE, main = "Median IBU by State", xlab = "State", ylab = "Median IBU", col = "Blue")
barplot(abv.med$ABV, names.arg = abv.med$ABV, beside = TRUE, main = "Median ABV by State", xlab = "State", ylab = "Median ABV", col = "Blue")
master[which.max(master$ABV),][,10]
master[which.max(master$IBU),][,10]
summary(master$ABV)
plot(master$ABV ~ master$IBU, main = "ABV to IBU", ylab = "ABV", xlab = "IBU")
table(master$State, count(master$Brewery_Name))
data.table(master$State, count(master$Brewery_Name))
sapply(master$Brewery_Name, count)
sapply(master$State, count(master$Brewery_Name))
sapply(master$State, count)
vapply(master, count, FUN.VALUE = master$Brewery_Name)
str(master)
table(master$State)
library(dplyr)
library(plyr)
library(plyr)
library(plyr)
library(dplyr)
beers <- read.csv("Beers.csv", colClasses = classProfile, na.strings = "", stringsAsFactors = TRUE)
# load Beers.csv, setting data types
classProfile <- c("character", "integer", "numeric", "integer", "integer", "factor", "numeric")
beers <- read.csv("Beers.csv", colClasses = classProfile, na.strings = "", stringsAsFactors = TRUE)
# further specify Name column in beers
names(beers)[names(beers) == "Name"] <- "Beer_Name"
# load Breweries.csv, setting data types
classProfile <- c("integer","character", "character", "factor")
breweries <- read.csv("Breweries.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in breweries
names(breweries)[names(breweries) == "Name"] <- "Brewery_Name"
master <- merge(beers, breweries, by.x="Brewery_id", by.y="Brew_ID", all=TRUE)
# reorder columns
master <- master[c("Beer_ID", "Beer_Name", "ABV", "IBU", "Style", "Ounces", "Brewery_id", "Brewery_Name", "City", "State" )]
# normalize column names
names(master)[names(master) == "Brewery_id"] <- "Brewery_ID"
# sort rows by beer ID
master <- master[order(master$Beer_ID),]
# head and tail of master
head(master, 6)
tail(master, 6)
str(master)
sapply(master, function(x) sum(is.na(x)))
# The two tables were already merged in the data cleaning process (see first section above).
head(master, 6)
tail(master, 6)
# load Beers.csv, setting data types
classProfile <- c("character", "integer", "numeric", "integer", "integer", "factor", "numeric")
beers <- read.csv("Beers.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in beers
names(beers)[names(beers) == "Name"] <- "Beer_Name"
# load Breweries.csv, setting data types
classProfile <- c("integer","character", "character", "factor")
breweries <- read.csv("Breweries.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in breweries
names(breweries)[names(breweries) == "Name"] <- "Brewery_Name"
master <- merge(beers, breweries, by.x="Brewery_id", by.y="Brew_ID", all=TRUE)
# reorder columns
master <- master[c("Beer_ID", "Beer_Name", "ABV", "IBU", "Style", "Ounces", "Brewery_id", "Brewery_Name", "City", "State" )]
# normalize column names
names(master)[names(master) == "Brewery_id"] <- "Brewery_ID"
# sort rows by beer ID
master <- master[order(master$Beer_ID),]
# head and tail of master
head(master, 6)
tail(master, 6)
table(master$State, useNA = "no")
# The two tables were already merged in the data cleaning process (see first section above).
head(master, 6)
tail(master, 6)
sapply(master, function(x) sum(is.na(x)))
ibu.med <- aggregate(master$IBU, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(ibu.med) <- c("State","IBU")
abv.med <- aggregate(master$ABV, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(abv.med) <- c("State","ABV")
barplot(ibu.med$IBU, names.arg = ibu.med$State, beside = TRUE, main = "Median IBU by State", xlab = "State", ylab = "Median IBU", col = "Blue")
barplot(abv.med$ABV, names.arg = abv.med$ABV, beside = TRUE, main = "Median ABV by State", xlab = "State", ylab = "Median ABV", col = "Blue")
master[which.max(master$ABV),][,10]
master[which.max(master$IBU),][,10]
summary(master$ABV)
plot(master$ABV ~ master$IBU, main = "ABV to IBU", ylab = "ABV", xlab = "IBU")
ibu.med <- aggregate(master$IBU, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(ibu.med) <- c("State","IBU")
abv.med <- aggregate(master$ABV, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(abv.med) <- c("State","ABV")
barplot(ibu.med$IBU, names.arg = ibu.med$State, beside = TRUE, main = "Median IBU by State", xlab = "State", ylab = "Median IBU", col = "Blue", main="Median IBU by State")
ibu.med <- aggregate(master$IBU, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(ibu.med) <- c("State","IBU")
abv.med <- aggregate(master$ABV, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(abv.med) <- c("State","ABV")
barplot(ibu.med$IBU, names.arg = ibu.med$State, beside = TRUE, main = "Median IBU by State", xlab = "State", ylab = "Median IBU", col = "Blue")
barplot(abv.med$ABV, names.arg = abv.med$ABV, beside = TRUE, main = "Median ABV by State", xlab = "State", ylab = "Median ABV", col = "Blue")
ibu.med <- aggregate(master$IBU, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(ibu.med) <- c("State","IBU")
abv.med <- aggregate(master$ABV, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(abv.med) <- c("State","ABV")
barplot(ibu.med$IBU, names.arg = ibu.med$IBU, beside = TRUE, main = "Median IBU by State", xlab = "State", ylab = "Median IBU", col = "Blue")
barplot(abv.med$ABV, names.arg = abv.med$ABV, beside = TRUE, main = "Median ABV by State", xlab = "State", ylab = "Median ABV", col = "Blue")
ibu.med <- aggregate(master$IBU, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(ibu.med) <- c("State","IBU")
abv.med <- aggregate(master$ABV, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(abv.med) <- c("State","ABV")
barplot(ibu.med$IBU, names.arg = ibu.med$IBU, beside = TRUE, main = "Median IBU by State", xlab = "State", ylab = "Median IBU", col = "Blue")
barplot(abv.med$ABV, names.arg = abv.med$ABV, beside = TRUE, main = "Median ABV by State", xlab = "State", ylab = "Median ABV", col = "Blue")
ibu.med <- aggregate(master$IBU, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(ibu.med) <- c("State","IBU")
abv.med <- aggregate(master$ABV, by = list(master$State), FUN = function(x) median(x, na.rm = TRUE))
names(abv.med) <- c("State","ABV")
barplot(ibu.med$IBU, names.arg = ibu.med$State, beside = TRUE, main = "Median IBU by State", xlab = "State", ylab = "Median IBU", col = "Blue")
barplot(abv.med$ABV, names.arg = abv.med$State, beside = TRUE, main = "Median ABV by State", xlab = "State", ylab = "Median ABV", col = "Blue")
master[which.max(master$ABV),][,10]
master[which.max(master$IBU),][,10]
# load Beers.csv, setting data types
classProfile <- c("character", "integer", "numeric", "integer", "integer", "factor", "numeric")
beers <- read.csv("Beers.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in beers
names(beers)[names(beers) == "Name"] <- "Beer_Name"
# load Breweries.csv, setting data types
classProfile <- c("integer","character", "character", "factor")
breweries <- read.csv("Breweries.csv", colClasses = classProfile, na.strings = "")
# further specify Name column in breweries
names(breweries)[names(breweries) == "Name"] <- "Brewery_Name"
master <- merge(beers, breweries, by.x="Brewery_id", by.y="Brew_ID", all=TRUE)
# reorder columns
master <- master[c("Beer_ID", "Beer_Name", "ABV", "IBU", "Style", "Ounces", "Brewery_id", "Brewery_Name", "City", "State" )]
# normalize column names
names(master)[names(master) == "Brewery_id"] <- "Brewery_ID"
# sort rows by beer ID
master <- master[order(master$Beer_ID),]
# head and tail of master
head(master, 6)
tail(master, 6)
getwd()
str(master)
summary(master)
# load Beers.csv, setting data types
classProfile <- c("character", "integer", "numeric", "integer", "integer", "factor", "numeric")
beers <- read.csv("Beers.csv", colClasses = classProfile, na.strings = "", strip.white = TRUE)
# further specify Name column in beers
names(beers)[names(beers) == "Name"] <- "Beer_Name"
# load Breweries.csv, setting data types
classProfile <- c("integer","character", "character", "factor")
breweries <- read.csv("Breweries.csv", colClasses = classProfile, na.strings = "", strip.white = TRUE)
# further specify Name column in breweries
names(breweries)[names(breweries) == "Name"] <- "Brewery_Name"
master <- merge(beers, breweries, by.x="Brewery_id", by.y="Brew_ID", all=TRUE)
# reorder columns
master <- master[c("Beer_ID", "Beer_Name", "ABV", "IBU", "Style", "Ounces", "Brewery_id", "Brewery_Name", "City", "State" )]
# normalize column names
names(master)[names(master) == "Brewery_id"] <- "Brewery_ID"
# sort rows by beer ID
master <- master[order(master$Beer_ID),]
str(master)
head(master, 100)
?read.csv
head(master)
head(master, 100)
names(beers)
names(beers)[names(beers)=="Name"]
master
names(breweries)
names(breweries)=="Name"
# load Beers.csv, setting data types
classProfile <- c("character", "integer", "numeric", "integer", "integer", "factor", "numeric")
beers <- read.csv("Beers.csv", colClasses = classProfile, na.strings = "", strip.white = TRUE)
beers
names(beers)
names(beers)
names(beers)[names(beers)=="Name"]
test <- names(beers)[names(beers)=="Name"]
test
beers
summary(beers)
str(master)
head(beers)
names(beers)[names(beers) == "Name"] <- "Beer_Name"
head(beers)
head(breweries)
duplicated(master$Beer_ID)
sum(duplicated(master$Beer_ID))
dim(master)
dim(beers)
?table
unique(master$Brewery_ID)
master[unique(master$Brewery_ID)]
unique(master$Brewery_ID)
unique.master <- master[!duplicated(master$Brewery_ID)]
str(master)
unique.master <- master[!duplicated(master$Brewery_ID),]
unique.master
dim(unique.master)
dim(master)
table(unique.master$State, useNA = "no")
